apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: nginx
    name: nginx
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: nginx
      from:
        kind: DockerImage
        name: nginx
      generation: null
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: nginx
    name: nginx
  spec:
    replicas: 1
    selector:
      app: nginx
      deploymentconfig: nginx
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/container.nginx.image.entrypoint: '["nginx","-g","daemon off;"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: nginx
          deploymentconfig: nginx
      spec:
        containers:
        - image: nginx
          name: nginx
          terminationGracePeriodSeconds: 60
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 80
            protocol: TCP
          lifecycle:
            preStop:
              exec:
               command: ["/usr/sbin/nginx","-s","quit"]
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nginx
        from:
          kind: ImageStreamTag
          name: nginx:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: nginx
    name: nginx
  spec:
    ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 80
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: nginx
      deploymentconfig: nginx
  status:
    loadBalancer: {}
kind: List
metadata: {}
